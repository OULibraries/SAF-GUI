/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.safpackager;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.apache.commons.io.FilenameUtils;
import org.safpackager.Cs.CsPackage;
import org.safpackager.Cs.CsValidation;
import org.safpackager.Cs.CtPackage;
import org.safpackager.Cs.CtValidation;

/**
 *
 * @author john
 */
public class Builder extends javax.swing.JFrame {

    /**
     * Creates new form Builder
     */
    public Builder() {
        super("OU - Libraries");
        initComponents();
//        com.apple.eawt.Application.getApplication().setDockIconImage(new ImageIcon(getClass().getResource("/logo.png")).getImage());
    }

    private CsValidation validation = null;
    private String abstractPath = null;
    private String pathToSave = null;
    private String csPathToCsv = null;
    private String csPathToPhotos = null;
    private String csPathToSave = null;
    private String csPathToCollection = null;
    private String ctPathToCsv = null;
    private String ctPathToSave = null;
    private String ctPathToCollection = null;
    private CtValidation ctValidation = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        lblHomeLogo = new javax.swing.JLabel();
        lblHomeApplication = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnSAFOpenCSV = new javax.swing.JButton();
        lblSAFCSVPath = new javax.swing.JLabel();
        btnSAFGenerateSAF = new javax.swing.JButton();
        lblSAFAlert = new javax.swing.JLabel();
        btnSAFSelectPath = new javax.swing.JButton();
        lblSAFSelectedSavePath = new javax.swing.JLabel();
        lblSAFOutputDir = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnCsOpenCsv = new javax.swing.JButton();
        btnCsOpenSavePath = new javax.swing.JButton();
        lblCsCsvPath = new javax.swing.JLabel();
        lblCsSavePath = new javax.swing.JLabel();
        btnCsOpenCollection = new javax.swing.JButton();
        lblCsCollectionPath = new javax.swing.JLabel();
        btnCsGenerateSaf = new javax.swing.JButton();
        btnCsOpenPhotos = new javax.swing.JButton();
        lblCsPhotoPath = new javax.swing.JLabel();
        lblCsAlert = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnCtOpenCollectionCsv = new javax.swing.JButton();
        lblCtCollectionPath = new javax.swing.JLabel();
        btnCtOpenCsv = new javax.swing.JButton();
        lblCtCsvPath = new javax.swing.JLabel();
        btnCtGenerateTax = new javax.swing.JButton();
        lblCtAlert = new javax.swing.JLabel();
        btnCtOpenSavePath = new javax.swing.JButton();
        lblCtSavePath = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblHelpPrepareData = new javax.swing.JLabel();
        lblHelpGenerateSAF = new javax.swing.JLabel();
        lblHelpSampleCSV = new javax.swing.JLabel();
        lblHelpCSVTitle = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(120, 120, 570, 300));
        setLocation(new java.awt.Point(30, 23));

        tabbedPane.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblHomeLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N

        lblHomeApplication.setFont(new java.awt.Font("Lucida Grande", 1, 72)); // NOI18N
        lblHomeApplication.setText("SAFBuilder");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(lblHomeLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHomeApplication, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(lblHomeLogo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(lblHomeApplication)))
                .addContainerGap(135, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Home", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btnSAFOpenCSV.setText("Open a csv file");
        btnSAFOpenCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSAFOpenCSVActionPerformed(evt);
            }
        });

        btnSAFGenerateSAF.setText("Generate SAF");
        btnSAFGenerateSAF.setVisible(false);
        btnSAFGenerateSAF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSAFGenerateSAFActionPerformed(evt);
            }
        });

        btnSAFSelectPath.setText("Select path to save");
        btnSAFSelectPath.setVisible(false);
        btnSAFSelectPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSAFSelectPathActionPerformed(evt);
            }
        });

        lblSAFSelectedSavePath.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblSAFOutputDir))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSAFSelectPath)
                            .addComponent(lblSAFAlert)
                            .addComponent(btnSAFGenerateSAF)
                            .addComponent(btnSAFOpenCSV))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSAFCSVPath, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSAFSelectedSavePath, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSAFGenerateSAF, btnSAFOpenCSV, btnSAFSelectPath});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblSAFCSVPath, lblSAFSelectedSavePath});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSAFOpenCSV)
                    .addComponent(lblSAFCSVPath))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSAFAlert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSAFSelectPath)
                    .addComponent(lblSAFSelectedSavePath))
                .addGap(10, 10, 10)
                .addComponent(btnSAFGenerateSAF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSAFOutputDir)
                .addContainerGap(177, Short.MAX_VALUE))
        );

        tabbedPane.addTab("SAF", jPanel2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        btnCsOpenCsv.setText("Open cs csv");
        btnCsOpenCsv.setVisible(false);
        btnCsOpenCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCsOpenCsvActionPerformed(evt);
            }
        });

        btnCsOpenSavePath.setText("Select path to save");
        btnCsOpenSavePath.setVisible(false);
        btnCsOpenSavePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCsOpenSavePathActionPerformed(evt);
            }
        });

        btnCsOpenCollection.setText("Open collection csv");
        btnCsOpenCollection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCsOpenCollectionActionPerformed(evt);
            }
        });

        btnCsGenerateSaf.setText("Generate CS SAF");
        btnCsGenerateSaf.setVisible(false);
        btnCsGenerateSaf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCsGenerateSafActionPerformed(evt);
            }
        });

        btnCsOpenPhotos.setText("Open photo directory");
        btnCsOpenPhotos.setVisible(false);
        btnCsOpenPhotos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCsOpenPhotosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnCsOpenPhotos)
                        .addGap(8, 8, 8)
                        .addComponent(lblCsPhotoPath))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnCsOpenCollection)
                        .addGap(8, 8, 8)
                        .addComponent(lblCsCollectionPath))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnCsOpenSavePath)
                        .addGap(8, 8, 8)
                        .addComponent(lblCsSavePath))
                    .addComponent(btnCsGenerateSaf)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnCsOpenCsv)
                        .addGap(8, 8, 8)
                        .addComponent(lblCsCsvPath))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblCsAlert, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCsOpenCollection)
                    .addComponent(lblCsCollectionPath, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCsOpenCsv)
                    .addComponent(lblCsCsvPath))
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCsOpenPhotos)
                    .addComponent(lblCsPhotoPath))
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCsOpenSavePath)
                    .addComponent(lblCsSavePath))
                .addGap(10, 10, 10)
                .addComponent(btnCsGenerateSaf, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lblCsAlert)
                .addGap(90, 90, 90))
        );

        tabbedPane.addTab("CS", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        btnCtOpenCollectionCsv.setText("Open tax collection csv");
        btnCtOpenCollectionCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCtOpenCollectionCsvActionPerformed(evt);
            }
        });

        btnCtOpenCsv.setText("Open tax csv");
        btnCtOpenCsv.setVisible(false);
        btnCtOpenCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCtOpenCsvActionPerformed(evt);
            }
        });

        btnCtGenerateTax.setText("Generate tax");
        btnCtGenerateTax.setVisible(false);
        btnCtGenerateTax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCtGenerateTaxActionPerformed(evt);
            }
        });

        btnCtOpenSavePath.setText("Select path to save");
        btnCtOpenSavePath.setVisible(false);
        btnCtOpenSavePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCtOpenSavePathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblCtAlert))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnCtOpenCollectionCsv)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCtCollectionPath))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnCtOpenCsv)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCtCsvPath))
                    .addComponent(btnCtGenerateTax)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnCtOpenSavePath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCtSavePath)))
                .addContainerGap(394, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCtOpenCollectionCsv)
                    .addComponent(lblCtCollectionPath))
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCtOpenCsv)
                    .addComponent(lblCtCsvPath))
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCtOpenSavePath)
                    .addComponent(lblCtSavePath))
                .addGap(8, 8, 8)
                .addComponent(btnCtGenerateTax)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCtAlert)
                .addContainerGap(146, Short.MAX_VALUE))
        );

        tabbedPane.addTab("CS Tax", jPanel5);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        lblHelpPrepareData.setText("<html> <b>How to prepare data:</b><br/> 1) A csv metadata file (See sample below)<br/> 2) PDF or other files must be in the same directory with the csv<br/> 3) The header of column for files must be named as \"filename\"<br/> 4) Use || to separate file names if an item has multiple files<br/> 5) Dublin core metadata starts with \"dc\", custom non dublin core metadata has formats like \"ou.group\" or \"ou.group.faculty\" <br/> </html>");

        lblHelpGenerateSAF.setText("<html> <b>How to generate SAF package:</b><br/> 1) In the SAF tab, open the csv containing your metadata<br/> 2) Press Generate SAF button which appears if the opened file is a csv<br/> 3) Verify the location of the SAF package </html>");

        lblHelpSampleCSV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/headers.png"))); // NOI18N

        lblHelpCSVTitle.setText("sample csv file: ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblHelpPrepareData, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(15, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHelpCSVTitle)
                            .addComponent(lblHelpGenerateSAF, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHelpSampleCSV))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHelpPrepareData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHelpCSVTitle)
                .addGap(3, 3, 3)
                .addComponent(lblHelpSampleCSV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHelpGenerateSAF)
                .addContainerGap())
        );

        tabbedPane.addTab("Help", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSAFGenerateSAFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSAFGenerateSAFActionPerformed
        if (abstractPath != null) {
            SAFPackage safPackageInstance = new SAFPackage();
            pathToSave = lblSAFSelectedSavePath.getText();
            try {
                safPackageInstance.processMetaPack(abstractPath, pathToSave, true);
                lblSAFOutputDir.setText(safPackageInstance.getOutputString());
            } catch (IOException ex) {
                Logger.getLogger(Builder.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSAFGenerateSAFActionPerformed

    private void btnSAFOpenCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSAFOpenCSVActionPerformed

        btnSAFGenerateSAF.setVisible(false);
        btnSAFSelectPath.setVisible(false);
        lblSAFSelectedSavePath.setVisible(false);
        lblSAFOutputDir.setText("");

        JFileChooser fc = new JFileChooser();

        String fileName;
        int r = fc.showOpenDialog(null);
        if (r == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            fileName = file.getName();
            abstractPath = fc.getSelectedFile().getAbsolutePath();
            lblSAFCSVPath.setText(abstractPath);

            if ("csv".equals(getExtensionByApacheCommonLib(fileName))) {
                lblSAFAlert.setText("");
                btnSAFSelectPath.setVisible(true);
                lblSAFSelectedSavePath.setVisible(true);
                lblSAFSelectedSavePath.setText(fc.getSelectedFile().getParent());
                btnSAFGenerateSAF.setVisible(true);
            } else {
                lblSAFAlert.setText("Please select a csv file");
            }
        }
    }//GEN-LAST:event_btnSAFOpenCSVActionPerformed

    private void btnSAFSelectPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSAFSelectPathActionPerformed
        JFileChooser chooser = new JFileChooser();
        String choosertitle = "Select a Directory";
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle(choosertitle);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            pathToSave = chooser.getSelectedFile().toString();
            lblSAFSelectedSavePath.setText(pathToSave);
        }
    }//GEN-LAST:event_btnSAFSelectPathActionPerformed

    private void btnCsOpenCsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCsOpenCsvActionPerformed
        lblCsAlert.setText("");
        lblCsCsvPath.setText("");

        JFileChooser fc = new JFileChooser();

        String fileName;
        int r = fc.showOpenDialog(null);
        if (r == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            fileName = file.getName();
            csPathToCsv = fc.getSelectedFile().getAbsolutePath();

            if ("csv".equals(getExtensionByApacheCommonLib(fileName))) {
                try {
                    validation = CsValidation.getInstance();
                    Map<String, ArrayList> errors = validation.validateCSV(csPathToCsv);
                    if(!errors.isEmpty()) {
                        lblCsAlert.setText(Utils.getCsErrors(errors));
                    } else {
                        btnCsOpenPhotos.setVisible(true);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Builder.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(Builder.class.getName()).log(Level.SEVERE, null, ex);
                }
                lblCsCsvPath.setText(csPathToCsv);
            } else {
                lblCsAlert.setText("Please select a csv file");
            }
        }
    }//GEN-LAST:event_btnCsOpenCsvActionPerformed

    private void btnCsOpenSavePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCsOpenSavePathActionPerformed

        lblCsAlert.setText("");
        lblCsSavePath.setText("");
        
        JFileChooser chooser = new JFileChooser();
        String choosertitle = "Select a Directory";
        chooser.setDialogTitle(choosertitle);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            csPathToSave = chooser.getSelectedFile().toString();
            lblCsSavePath.setText(csPathToSave);
            btnCsGenerateSaf.setVisible(true);
        }        
    }//GEN-LAST:event_btnCsOpenSavePathActionPerformed

    private void btnCsOpenCollectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCsOpenCollectionActionPerformed

        lblCsAlert.setText("");
        lblCsCollectionPath.setText("");
        
        JFileChooser fc = new JFileChooser();

        String fileName;
        int r = fc.showOpenDialog(null);
        if (r == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            fileName = file.getName();
            csPathToCollection = fc.getSelectedFile().getAbsolutePath();

            if ("csv".equals(getExtensionByApacheCommonLib(fileName))) {
                try {
                    boolean isValidated = Utils.validateCollectionCsv(csPathToCollection);
                    if(!isValidated) {
                        lblCsAlert.setText(Utils.getCollectionErrors(isValidated));
                    } else {
                        btnCsOpenCsv.setVisible(true);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Builder.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(Builder.class.getName()).log(Level.SEVERE, null, ex);
                }
                lblCsCollectionPath.setText(csPathToCollection);
            } else {
                lblCsAlert.setText("Please select a csv file");
            }
        }
    }//GEN-LAST:event_btnCsOpenCollectionActionPerformed

    private void btnCsOpenPhotosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCsOpenPhotosActionPerformed

        lblCsAlert.setText("");
        lblCsPhotoPath.setText("");

        JFileChooser chooser = new JFileChooser();
        String choosertitle = "Select a Directory";
        chooser.setDialogTitle(choosertitle);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);

        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            csPathToPhotos = chooser.getSelectedFile().toString();
            validation = CsValidation.getInstance();
            Map<String, ArrayList> errors = validation.validatePhotoNameFormat(csPathToPhotos);
            if(!validation.isPhotoValidated(errors)) {
                lblCsAlert.setText(Utils.getPhotoErrors(errors));
            } else {
                lblCsPhotoPath.setText(csPathToPhotos);
                btnCsOpenSavePath.setVisible(true);
                lblCsSavePath.setVisible(true);
            }
        }
    }//GEN-LAST:event_btnCsOpenPhotosActionPerformed

    private void btnCsGenerateSafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCsGenerateSafActionPerformed
        CsPackage cSPackage = new CsPackage(csPathToCsv, csPathToPhotos, csPathToSave, csPathToCollection);        
        String e;
        try {
            cSPackage.processMetaPack();
        } catch (IOException ex) {
            e = Utils.getCsErrorInfo(cSPackage.getCsInfo());
            lblCsAlert.setText(e);
        }
        e = Utils.getCsErrorInfo(cSPackage.getCsInfo());
        lblCsAlert.setText(e);
    }//GEN-LAST:event_btnCsGenerateSafActionPerformed

    private void btnCtOpenCollectionCsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCtOpenCollectionCsvActionPerformed

        lblCtAlert.setText("");
        lblCtCollectionPath.setText("");
        
        JFileChooser fc = new JFileChooser();

        String fileName;
        int r = fc.showOpenDialog(null);
        if (r == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            fileName = file.getName();
            ctPathToCollection = fc.getSelectedFile().getAbsolutePath();

            if ("csv".equals(getExtensionByApacheCommonLib(fileName))) {
                try {
                    boolean isValidated = Utils.validateCollectionCsv(ctPathToCollection);
                    if(!isValidated) {
                        lblCtAlert.setText(Utils.getCollectionErrors(isValidated));
                    } else {
                        btnCtOpenCsv.setVisible(true);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Builder.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(Builder.class.getName()).log(Level.SEVERE, null, ex);
                }
                lblCtCollectionPath.setText(ctPathToCollection);
            } else {
                lblCtAlert.setText("Please select a csv file");
            }

        }        
    }//GEN-LAST:event_btnCtOpenCollectionCsvActionPerformed

    private void btnCtOpenCsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCtOpenCsvActionPerformed
        lblCtAlert.setText("");
        lblCtCsvPath.setText("");

        JFileChooser fc = new JFileChooser();

        String fileName;
        int r = fc.showOpenDialog(null);
        if (r == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            fileName = file.getName();
            ctPathToCsv = fc.getSelectedFile().getAbsolutePath();

            if ("csv".equals(getExtensionByApacheCommonLib(fileName))) {
                try {
                    ctValidation = new CtValidation(ctPathToCollection);
                    ArrayList<String> errors = ctValidation.validateCsv(ctPathToCsv);
                    if(errors.size() > 0) {
                        lblCtAlert.setText(Utils.getCtErrors(errors));
                    } else {
                        btnCtOpenSavePath.setVisible(true);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Builder.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(Builder.class.getName()).log(Level.SEVERE, null, ex);
                }
                lblCtCsvPath.setText(ctPathToCsv);
            } else {
                lblCtAlert.setText("Please select a csv file");
            }
        }
    }//GEN-LAST:event_btnCtOpenCsvActionPerformed

    private void btnCtOpenSavePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCtOpenSavePathActionPerformed

        lblCtAlert.setText("");
        lblCtSavePath.setText("");
        
        JFileChooser chooser = new JFileChooser();
        String choosertitle = "Select a Directory";
        chooser.setDialogTitle(choosertitle);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            ctPathToSave = chooser.getSelectedFile().toString();
            lblCtSavePath.setText(ctPathToSave);
            btnCtGenerateTax.setVisible(true);
        }        

    }//GEN-LAST:event_btnCtOpenSavePathActionPerformed

    private void btnCtGenerateTaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCtGenerateTaxActionPerformed
        CtPackage ctPackage = new CtPackage(ctPathToCollection, ctPathToCsv, ctPathToSave);        
        try {
            ctPackage.processMetaPack();
        } catch (IOException ex) {
            Logger.getLogger(Builder.class.getName()).log(Level.SEVERE, null, ex);
        }
        lblCtAlert.setText("");

    }//GEN-LAST:event_btnCtGenerateTaxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Builder.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Builder.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Builder.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Builder.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Builder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCsGenerateSaf;
    private javax.swing.JButton btnCsOpenCollection;
    private javax.swing.JButton btnCsOpenCsv;
    private javax.swing.JButton btnCsOpenPhotos;
    private javax.swing.JButton btnCsOpenSavePath;
    private javax.swing.JButton btnCtGenerateTax;
    private javax.swing.JButton btnCtOpenCollectionCsv;
    private javax.swing.JButton btnCtOpenCsv;
    private javax.swing.JButton btnCtOpenSavePath;
    private javax.swing.JButton btnSAFGenerateSAF;
    private javax.swing.JButton btnSAFOpenCSV;
    private javax.swing.JButton btnSAFSelectPath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblCsAlert;
    private javax.swing.JLabel lblCsCollectionPath;
    private javax.swing.JLabel lblCsCsvPath;
    private javax.swing.JLabel lblCsPhotoPath;
    private javax.swing.JLabel lblCsSavePath;
    private javax.swing.JLabel lblCtAlert;
    private javax.swing.JLabel lblCtCollectionPath;
    private javax.swing.JLabel lblCtCsvPath;
    private javax.swing.JLabel lblCtSavePath;
    private javax.swing.JLabel lblHelpCSVTitle;
    private javax.swing.JLabel lblHelpGenerateSAF;
    private javax.swing.JLabel lblHelpPrepareData;
    private javax.swing.JLabel lblHelpSampleCSV;
    private javax.swing.JLabel lblHomeApplication;
    private javax.swing.JLabel lblHomeLogo;
    private javax.swing.JLabel lblSAFAlert;
    private javax.swing.JLabel lblSAFCSVPath;
    private javax.swing.JLabel lblSAFOutputDir;
    private javax.swing.JLabel lblSAFSelectedSavePath;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables

    private String getExtensionByApacheCommonLib(String filename) {
        return FilenameUtils.getExtension(filename);
    }
}
